{"version":3,"sources":["store/tasks.store.ts","store/app.store.ts","utils/axios.ts","misc/default-task.js","utils/parse-youtube-url.ts","store/player.store.ts","store/index.ts","store/selectors.ts","hooks/useYoutube.tsx","components/Player/Player.tsx","hooks/useForceUpdate.ts","hooks/useReactRouter.ts","components/Tasks/Tasks.tsx","components/Home/Home.tsx","components/App/App.tsx","index.tsx","components/Tasks/Tasks.module.css"],"names":["TaskSource","store","isOpenListModal","setIsOpenListModal","state","payload","instance","axios","create","baseURL","process","default_task","link","subtitle","parseYoutubeUrl","url","res","match","String","items","isFetching","add","push","delete","index","findIndex","__","id","splice","setItems","setFetching","fetch","thunk","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","actions","raw","tasks","defaultTasks","i","defaultTaskListElement","t","wrap","_context","prev","next","localStorage","getItem","JSON","parse","abrupt","defaultTaskList","length","get","concat","sent","plainSubtitles","data","source","YOUTUBE","syncWithLocalstorage","stop","this","_x","apply","arguments","setItem","stringify","listeners","listen","on","subtitles","setSubtitles","fetchSubtitlesFromTasksStore","helpers","task","sb","getState","Number","getTaskById","subtitleLib","_x2","_x3","src_store","app","player","select","_state$tasks$items$fi","filter","item","slicedToArray","YTScriptLoad","Promise","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","window","onYouTubeIframeAPIReady","YT","BuildYTPlayer","options","videoId","events","playerVars","resolve","reject","YTp","finishEvents","objectSpread","onReady","event","Player","height","width","idCounter","isEmpty","str","useYoutube","_useState","useState","_useState2","setPlayer","_useState3","_useState4","setState","htmlId","useMemo","prefix","uniqueId","element","react_default","useEffect","opt","cueVideoById","_load","load","console","log","_callee2","ytPlayer","_context2","onStateChange","getPlayerState","props","params","onFetchSubtitlesFromTasksStore","useActions","currentTask","useStore","s","tasksState","react_router","to","_useYoutube","video","tasksButton","map","key","react_router_dom","toggle","useForceUpdate","useRouter","forceUpdate","routerContext","useContext","__RouterContext","Error","history","Tasks","_useActions","onFetch","onDelete","renderTableList","img","onClick","style","textAlign","href","target","className","styles","image","alt","verticalAlign","buttons","intent","icon","e","stopPropagation","handleDeleteRowClick","dialog","title","isOpen","onClose","usePortal","Classes","OVERLAY_SCROLL_CONTAINER","overflow","htmlTable","interactive","bordered","Home","setTimeout","FocusStyleManager","onlyShowFocusOnTabs","createStore","plainStore","App","easy_peasy_esm","basename","exact","path","component","Component","ReactDOM","render","components_App_App","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0c396a88.chunk.js","sourcesContent":["import axios from '../utils/axios';\nimport { Action, listen, Listen, thunk, Thunk } from 'easy-peasy';\nimport defaultTaskList from \"../misc/default-task.js\";\nimport parseYoutubeUrl from \"../utils/parse-youtube-url\";\n\nexport enum TaskSource {\n  YOUTUBE = 'youtube',\n  AUDIO = 'audio',\n}\n\nexport interface Task {\n  id: number,\n  url: string,\n  source: TaskSource,\n  plainSubtitles: string,\n}\n\nexport interface ITasksState {\n  items: Task[],\n  isFetching: boolean,\n  listeners: Listen<ITasksActions>;\n}\n\ninterface ITasksActions {\n  add: Action<ITasksState, Task>,\n  delete: Action<ITasksState, number>,\n  setItems: Action<ITasksState, Task[]>,\n  setFetching: Action<ITasksState, boolean>,\n  syncWithLocalstorage: Action<ITasksState>;\n  fetch: Thunk<ITasksActions>;\n}\n\nexport type ITasksStore = ITasksState & ITasksActions;\n\nconst store: ITasksStore = {\n  items: [],\n  isFetching: true,\n  add: (state, payload) => {\n    state.items.push(payload)\n  },\n  delete: (state, payload) => {\n    let index = state.items.findIndex(__ => __.id === payload);\n    state.items.splice(index, 1)\n  },\n  setItems: (state, payload) => {\n    state.items = payload;\n  },\n  setFetching: (state, payload) => {\n    state.isFetching = payload;\n  },\n  fetch: thunk(async (actions) => {\n    actions.setFetching(true);\n    const raw = localStorage.getItem(\"app_items\");\n    if (raw) {\n      const tasks = JSON.parse(raw);\n      actions.setItems(tasks);\n      actions.setFetching(false);\n      return;\n    }\n\n    const defaultTasks = [];\n\n    for (let i = 0; i < defaultTaskList.length; i++) {\n      const defaultTaskListElement = defaultTaskList[i];\n      const res = await axios.get(`/${defaultTaskListElement.subtitle}`);\n      const t: Task = {\n        id: i,\n        plainSubtitles: res.data,\n        source: TaskSource.YOUTUBE,\n        url: parseYoutubeUrl(defaultTaskListElement.link),\n      };\n      defaultTasks.push(t);\n    }\n\n    actions.setItems(defaultTasks);\n    actions.syncWithLocalstorage(null);\n    actions.setFetching(false);\n  }),\n  syncWithLocalstorage: (state) => {\n    localStorage.setItem(\"app_items\", JSON.stringify(state.items));\n  },\n  listeners: listen(on => {\n    on(store.delete, (actions) => {\n      actions.syncWithLocalstorage(null);\n    });\n  })\n};\n\nexport default store;\n","import { Action } from \"easy-peasy\";\n\ninterface IAppState {\n  isOpenListModal: boolean,\n}\n\nexport interface IAppActions {\n  setIsOpenListModal: Action<IAppState, boolean>,\n}\n\nexport type IAppStore = IAppState & IAppActions;\n\nconst store: IAppStore = {\n  isOpenListModal: false,\n  setIsOpenListModal: (state, payload) => {\n    state.isOpenListModal = payload\n  }\n};\n\nexport default store;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: process.env.PUBLIC_URL,\n});\n\nexport default instance;\n","export default [\n  {\n    link: \"https://www.youtube.com/watch?time_continue=0&v=5VE9nihee7o\",\n    subtitle: \"[DownSub.com] Hillary Clinton_ The Vox Conversation.srt\",\n  },\n  {\n    link: \"https://youtu.be/quJdL9ggETI\",\n    subtitle: \"[DownSub.com] Margaret Gould Stewart_ How giant websites design for you (and a billion others, too).srt\",\n  },\n  {\n    link: \"https://youtu.be/H2QxFM9y0tY\",\n    subtitle: \"[DownSub.com] The disarming case to act right now on climate change _ Greta Thunberg.srt\",\n  },\n  {\n    link: \"https://youtu.be/pj8n78AuN3w\",\n    subtitle: \"[DownSub.com] YouTube's Rules Don't Apply to Everyone.srt\",\n  },\n  {\n    link: \"https://www.youtube.com/watch?v=PjTc-EiwHqc\",\n    subtitle: \"[DownSub.com] Who I'm Voting for President re_ Casey Neistat.srt\",\n  },\n  {\n    link: \"https://youtu.be/jAhjPd4uNFY\",\n    subtitle: \"[DownSub.com] Genetic Engineering Will Change Everything Forever – CRISPR.srt\",\n  },\n  {\n    link: \"https://youtu.be/DHg5j9cTb2k?t=32\",\n    subtitle: \"[DownSub.com] Genetic Engineering Will Change Everything Forever – CRISPR.srt\",\n  },\n\n]\n","export default function parseYoutubeUrl(url: string): string {\n  const regexp = /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=|attribution_link\\?a=.+?watch.+?v(?:%|=)))((\\w|-){11})(?:\\S+)?$/;\n  const res = url.match(regexp);\n  return String(res![1]);\n}\n","import { Action, Select, select, thunk, Thunk } from 'easy-peasy';\n// @ts-ignore\nimport * as subtitleLib from 'subtitle';\nimport { IStore } from './index';\n\nexport interface ISubtitleItem {\n  start: number,\n  end: number,\n  text: string,\n  settings?: string,\n}\n\ninterface IPlayerState {\n  subtitles: ISubtitleItem[],\n  isFetching: boolean,\n}\n\ninterface IPlayerActions {\n  setSubtitles: Action<IPlayerState, ISubtitleItem[]>,\n  setFetching: Action<IPlayerState, boolean>,\n  fetchSubtitlesFromTasksStore: Thunk<IPlayerActions, string, any, IStore>;\n}\n\nexport type IPlayerStore = IPlayerState & IPlayerActions;\n\nconst store: IPlayerStore = {\n  subtitles: [],\n  isFetching: true,\n  setSubtitles: (state, payload) => {\n    state.subtitles = payload;\n  },\n  setFetching: (state, payload) => {\n    state.isFetching = payload;\n  },\n  fetchSubtitlesFromTasksStore: thunk(async (actions, payload, helpers) => {\n    const state = helpers.getState();\n    const id = Number(payload);\n    const task = state.getTaskById(id);\n\n    if (!task) {\n      return;\n    }\n\n    const sb = subtitleLib.parse(task.plainSubtitles);\n    actions.setSubtitles(sb);\n    actions.setFetching(false);\n  })\n};\n\nexport default store;\n","import { Select } from \"easy-peasy\";\n\nimport app, { IAppStore } from './app.store';\nimport tasks, { ITasksStore } from './tasks.store';\nimport player, { IPlayerStore } from './player.store';\nimport { getTaskById } from './selectors';\n\nexport interface IStore {\n  app: IAppStore,\n  tasks: ITasksStore,\n  player: IPlayerStore,\n  getTaskById: Select<IStore>,\n}\n\nexport default {\n  app,\n  tasks,\n  player,\n  // 👇 selectors\n  getTaskById,\n}\n","import { select } from 'easy-peasy';\nimport { IStore } from './index';\nimport { Task } from \"./tasks.store\";\n\nexport const getTaskById = select<IStore>(state => (id: number) => {\n  const [task] = state.tasks.items.filter((item: Task) => item.id === id);\n  return task;\n});\n","import React, { ReactNode, useState, useEffect, useMemo } from \"react\";\n\ndeclare global {\n  interface Window {\n    onYouTubeIframeAPIReady: any\n    YT: any\n  }\n}\n\ninterface BuildTYOptions {\n  id: string,\n  videoId: string,\n  events: any,\n  playerVars: any,\n}\n\nconst YTScriptLoad = new Promise(res => {\n  const tag = document.createElement('script');\n  tag.src = `https://www.youtube.com/iframe_api`;\n  const firstScriptTag = document.getElementsByTagName('script')[0];\n  firstScriptTag!.parentNode!.insertBefore(tag, firstScriptTag);\n  window.onYouTubeIframeAPIReady = () => res(window.YT);\n});\n\n\nconst BuildYTPlayer = (options: BuildTYOptions): any => {\n  const {id, videoId, events, playerVars} = options;\n\n  return new Promise(async (resolve, reject) => {\n    const YTp: any = await YTScriptLoad;\n    const finishEvents = {\n      ...events,\n      onReady(event: any) {\n        resolve(player);\n        events.onReady && events.onReady(event);\n      },\n    };\n\n    const player = new YTp.Player(id, {\n      videoId,\n      height: '390',\n      width: '640',\n      playerVars: playerVars,\n      events: finishEvents,\n    });\n\n    return player;\n  })\n};\n\nlet idCounter = 0;\n\nfunction isEmpty(str: string): boolean {\n  return (!str || 0 === str.length);\n}\n\nfunction uniqueId(prefix: string) {\n  let id = ++idCounter;\n  return String(prefix) + id;\n}\n\nfunction useYoutube(videoId: string): [ReactNode, YT.Player | null, YT.PlayerState] {\n  const [player, setPlayer] = useState<YT.Player | null>(null);\n  const [state, setState] = useState<YT.PlayerState>(-1);\n  const htmlId = useMemo(() => uniqueId('unq-yt-id-'), []);\n  const element = !isEmpty(videoId) && <div id={htmlId}/>;\n\n  useEffect(() => {\n    if (isEmpty(videoId)) return;\n    const opt = {\n      id: htmlId,\n      videoId,\n      events: {},\n      playerVars: {},\n    };\n\n    async function load() {\n      const ytPlayer = await BuildYTPlayer({\n        ...opt,\n        events: {\n          onStateChange: () => {\n            setState(ytPlayer.getPlayerState());\n          },\n        }\n      });\n      return setPlayer(ytPlayer);\n    }\n\n    if (!player) {\n      load();\n    } else {\n      player.cueVideoById(videoId);\n    }\n\n    return () => {\n      console.log(\"return\");\n    };\n\n  }, [videoId]);\n\n  return [element, player, state];\n}\n\n\nexport default useYoutube;\n","import React, { useEffect } from 'react';\nimport { Actions, State, useActions, useStore } from \"easy-peasy\";\nimport { IStore } from \"../../store\";\nimport useYoutube from \"../../hooks/useYoutube\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { get } from 'lodash';\n\ninterface PlayerProps {\n  [key: string]: any;\n}\n\n/**\n * TODO: autoplay\n * @param props\n * @constructor\n */\nfunction Player(props: PlayerProps) {\n  const id = props.match.params.id;\n  const {\n    onFetchSubtitlesFromTasksStore,\n  } = useActions((a: Actions<IStore>) => ({\n    setIsOpenListModal: a.app.setIsOpenListModal,\n    onFetchSubtitlesFromTasksStore: a.player.fetchSubtitlesFromTasksStore,\n  }));\n  const currentTask = useStore((s: State<IStore>) => s.getTaskById(Number(id)), [id]);\n  const tasksState = useStore((s: State<IStore>) => s.tasks, [id]);\n  const playerState = useStore((s: State<IStore>) => s.player, [id]);\n\n  useEffect(() => {\n    if (tasksState.isFetching) {\n      return;\n    }\n    onFetchSubtitlesFromTasksStore(id);\n  }, [id, tasksState.isFetching]);\n\n  if (!id) {\n    return <Redirect to=\"/\"/>;\n  }\n\n  const videoId = get(currentTask, 'url');\n\n  const [video] = useYoutube(videoId);\n\n  const tasksButton = tasksState.items.map((item) => {\n    return (\n      <li key={item.url}>\n        <Link to={`/play/${item.url}`}>{item.url}</Link>\n      </li>\n    );\n  });\n\n\n  return (\n    <div>\n      <hr/>\n      {video}\n      <hr/>\n      <ul>\n        {tasksButton}\n      </ul>\n    </div>\n  )\n}\n\nexport default Player;\n","import { useState } from 'react';\n\ninterface VoidFunction {\n  (): void;\n}\n\ninterface VoidFunctionCreator {\n  (): VoidFunction;\n}\n\nconst toggle = (state: boolean): boolean => !state;\n\nconst useForceUpdate: VoidFunctionCreator = (): VoidFunction => {\n  const [, setState] = useState<boolean>(true);\n  return (): void => {\n    setState(toggle);\n  };\n};\n\nexport default useForceUpdate;\n","// @ts-ignore\nimport { useContext, useEffect } from 'react';\n\n// @ts-ignore\nimport { __RouterContext, RouteComponentProps } from 'react-router';\nimport useForceUpdate from './useForceUpdate';\n\ninterface UseRouter {\n  <T = {}>(): RouteComponentProps<T>;\n}\n\ninterface VoidFunction {\n  (): void;\n}\n\n/**\n * Work only with react-router@4.4.0 +\n */\nconst useRouter: UseRouter = <T = {}>(): RouteComponentProps<T> => {\n  const forceUpdate: VoidFunction = useForceUpdate();\n  const routerContext: RouteComponentProps<T> = useContext(__RouterContext);\n  console.log(\"routerContext = \", routerContext);\n\n  if (!routerContext) {\n    throw new Error('use-react-router may only be used within a react-router context.');\n  }\n\n  useEffect(\n    (): VoidFunction =>\n      routerContext.history.listen(forceUpdate),\n    [routerContext]\n  );\n  return routerContext;\n};\n\nexport default useRouter;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Classes, Dialog, HTMLTable } from \"@blueprintjs/core\";\nimport { useActions, useStore, State, Actions } from \"easy-peasy\";\nimport useYoutube from \"../../hooks/useYoutube\";\nimport { IStore } from \"../../store\";\nimport styles from \"./Tasks.module.css\";\nimport useRouter from \"../../hooks/useReactRouter\";\n\ninterface TasksProps {\n}\n\nexport default function Tasks(props: TasksProps) {\n  const tasksState = useStore((s: State<IStore>) => s.tasks);\n  const isOpenListModal = useStore((s: State<IStore>) => s.app.isOpenListModal);\n  const {history} = useRouter();\n\n  const {\n    onFetch,\n    onDelete,\n    setIsOpenListModal,\n  } = useActions((a: Actions<IStore>) => ({\n    onFetch: a.tasks.fetch,\n    onDelete: a.tasks.delete,\n    setIsOpenListModal: a.app.setIsOpenListModal,\n  }));\n\n  useEffect(() => {\n    onFetch();\n  }, []);\n\n  function handleTableRowClick(id: number) {\n    history.push(`/play/${id}`);\n    console.log(\"handleTableRowClick\");\n  }\n\n  function handleDeleteRowClick(e: any, id: number) {\n    onDelete(id);\n    e.stopPropagation();\n  }\n\n  function renderTableList() {\n    return tasksState.items.map((item, i) => {\n      const img = `https://i.ytimg.com/vi/${item.url}/hqdefault.jpg`;\n      const link = `https://youtu.be/${item.url}`;\n\n      return (\n        <tr onClick={() => handleTableRowClick(item.id)} key={i}>\n          <td style={{width: 120, textAlign: 'center'}}>\n            <a href={link} target=\"_blank\">\n              <img className={styles.image} src={img} alt=\"\"/>\n            </a>\n          </td>\n          <td>\n            <h4># {item.id}</h4>\n          </td>\n          <td style={{width: 80, textAlign: 'center', verticalAlign: 'middle'}}>\n            <Button intent=\"danger\" icon=\"delete\" onClick={(e: any) => handleDeleteRowClick(e, item.id)}/>\n          </td>\n        </tr>\n      )\n    });\n  }\n\n  function renderTable() {\n    return (\n      <HTMLTable style={{width: '100%'}} interactive={true} bordered={true}>\n        <tbody>\n        {renderTableList()}\n        </tbody>\n      </HTMLTable>\n    );\n  }\n\n  function renderDialog() {\n    return (\n      <Dialog\n        style={{width: '70%'}}\n        icon=\"info-sign\"\n        title=\"List\"\n        isOpen={isOpenListModal}\n        onClose={() => setIsOpenListModal(false)}\n        usePortal={true}\n        className={Classes.OVERLAY_SCROLL_CONTAINER}\n      >\n        <div style={{overflow: 'scroll', height: '70vh'}}>\n          {renderTable()}\n        </div>\n      </Dialog>\n    );\n  }\n\n  return renderDialog();\n}\n\n\n","import React, { useEffect } from \"react\";\nimport { Actions, useActions } from \"easy-peasy\";\nimport { IStore } from \"../../store\";\n\nexport default function Home() {\n  const {\n    setIsOpenListModal,\n  } = useActions((a: Actions<IStore>) => ({\n    setIsOpenListModal: a.app.setIsOpenListModal,\n  }));\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsOpenListModal(true);\n    }, 400);\n  }, []);\n\n  return null\n}\n","import React, { Component } from 'react';\n// import { Router, Link, createHistory, LocationProvider } from \"@reach/router\"\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport { FocusStyleManager } from \"@blueprintjs/core\";\nimport { StoreProvider, createStore } from 'easy-peasy';\nimport plainStore, { IStore } from \"../../store\";\nimport Player from \"../Player/Player\";\nimport Tasks from \"../Tasks/Tasks\";\n\nimport '../../../node_modules/@blueprintjs/core/lib/css/blueprint.css';\nimport './App.css';\nimport Home from '../Home/Home';\n\nFocusStyleManager.onlyShowFocusOnTabs();\n\nconst store = createStore<IStore>(plainStore);\n\nclass App extends Component {\n  render() {\n    return (\n      <StoreProvider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div>\n            <Route exact path=\"/\" component={Home}/>\n            <Route path=\"/play/:id\" component={Player}/>\n            <Route exact path=\"/play\" component={Player}/>\n            <Tasks/>\n          </div>\n        </Router>\n      </StoreProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Tasks_image__3yXbi\"};"],"sourceRoot":""}